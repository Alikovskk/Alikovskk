"================================Области видимости================================"
# LEGB - Local Enclosed Global Built-in

"================================Built-in======================================="
# Встроенное пространство имен (list, sum, dict, print, input)

"================================Global======================================="
"""
Все переменные, которые мы создали внутри одного файла
Чтобы посмотреть все глобальные переменные, можно использовать функцию globals
"""

# a = 5
# b = 10
# print(globals())

"==============================Enclosed====================================="
# Замкнутое пространство имен - локальное пространство, у которого есть внутреннее локальное пространство

# var = 'global'

# def func():
#     """
#     Локальное пространство для глобального пространства
#     замкнутое пространство (потому что есть более локальное пространство)
#     """
#     var = 'enclosed'
#     def inner_func():
#         # Локальное пространство для пространства функции func()
#         var = 'local'
#         print(var)
#     print(var)
#     inner_func()

# print(var)
# func()
# global
# enclosed
# local

"================================Local===================================="
# Локальное пространство имен - переменные, созданные внутри функции

a = 10

# def func(a, b):
#     print('GLOBALS', globals())
#     print('LOCALS', locals())
#     print(a, b)

# func(10, 12)

# count = 1

# def increase_count():
#     global count
#     print(count)
#     count += 1

# increase_count()
# increase_count()
# increase_count()
# increase_count()


# def count(i):
#     counter = 0

#     def increase_count():
#         nonlocal counter
#         print(counter)
#         counter += 1
#     for j in range(i):
#         increase_count()

# count(20)


# def func():
#     local_var = 10
# func()
# # print(local_var) # NameError
# func()

"""
1) ИЗ ГЛОБАЛЬНОЙ ОБЛАСТИ ВИДИМОСТИ, ПОЛУЧИТЬ ДОСТУП К ПЕРЕМЕННЫМ ЛОКАЛЬНОЙ ОБЛАСТИ НЕВОЗМОЖНО

2) ИЗ ЛОКАЛЬНОЙ ОБЛАСТИ ВИДИМОСТИ ДОСТУП К ГЛОБАЛЬНОЙ ОГРАНИЧЕН (ВЫ МОЖЕТЕ ЕЕ РАСПЕЧАТАТЬ, НО НЕ ИЗМЕНИТЬ, ДЛЯ ИЗМЕНЕНИЯ НУЖНА ФУНКЦИЯ global <НАЗВАНИЕ ПЕРЕМЕННОЙ>)

3) ИЗ ЛОКАЛЬНОЙ ОБЛАСТИ ОБЛАСТИ ВИДИМОСТИ ДОСТУП К ПЕРЕМЕННЫМ ЗАМКНУТОЙ ОБЛАСТИ ВИДИМОСТИ ТАК-ЖЕ ОГРАНИЧЕН (ВЫ МОЖЕТЕ ЕЕ РАСПЕЧАТАТЬ, НО НЕ ИЗМЕНИТЬ, ДЛЯ ИЗМЕНЕНИЯ НУЖНО ИСПОЛЬЗОВАТЬ ФУНКЦИЮ nonlocal <НАЗВАНИЕ ПЕРЕМЕННОЙ>)
"""


# 1 правило (пример)

# def function1():
#     count = 0 # Переменная локальной области видимости
#     print(count)

# print(count) # print() вызывается в глобальной области видимости, а переменная count - локальная, поэтому выйдет ошибка (NameError)

# 2 правило (пример)

# a = 10

# def function2():
#     global a # как только я вызвал global, и указал туда переменную а, я могу ее изменить
#     print(a) # 10
#     a = 20 # Выйдет ошибка, потому что из локальной области, изменять переменные глобальной области нельзя (без вызова функции global)
#     print(a) # 20


# function2()


# 3 правило (пример)

#
print()
